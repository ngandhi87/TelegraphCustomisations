<media-mogul-configuration>
<config groupname="DripFeed">
<properties>
<CLASS>Maintenance</CLASS>
<TYPE>Database</TYPE>
<NAME>Drip feed items into indexing queue</NAME>
<APP_GROUP description="Application group">SYSGROUP1</APP_GROUP>
<START_URL/>
<NUMBER_ASSETS description="Number of assets to add to main index queue for each run">500</NUMBER_ASSETS>
<MAIN_INDEX_QUEUE_THRESHOLD description="Assets from drip feed queue will not be added into the main queue if currently containing assets exceeding this number">500</MAIN_INDEX_QUEUE_THRESHOLD> 
<NORMALLY_RUNNING>n</NORMALLY_RUNNING>
<schedule-timed-weekdays/>
<schedule-timed-dates/>
<schedule-timed-months/>
</properties>
<schedule>
<scheduletype>continuous</scheduletype>
<runinterval>
<count>1</count>
<intervalsize>minute</intervalsize>
</runinterval>
<timedschedule>
<hours>00</hours>
<minutes>01</minutes>
<weekdays/><dates/><months/></timedschedule>
</schedule>
<modules>
<module ref="Inject_Pix">
<class>com.picdar.process2.Repository.JDBCStatement.JDBCStatement</class>
<config>
<datasource>default</datasource>
<statement>insert into mm_index_queue (CREATION_STAMP, TABLE_NAME, ATTEMPT_COUNT, TARGET_INDEX, DATABASE, QUEUE_NAME, ITEM_TYPE, PRIMARY_KEY, STATUS, JOB_ID, LAST_ERROR, ITEM_DATASOURCE, FEED_NAME, ITEM_KEY, USER_NAME, ACTION, INDEX_ID, UPDATE_STAMP, PRIORITY) select cast(current_timestamp at time zone dbtimezone as date),'',0,'','','MM_PICTURE_INDEX','','','Pending','','','','',asset_id,'Dan_Drip','Index',mm_index_queue_seq.nextval,cast(current_timestamp at time zone dbtimezone as date), 15 from dripfeed_index where rownum&lt;=%%value:NUMBER_ASSETS:1000%% and not exists (select * from mm_index_queue where item_key=dripfeed_index.asset_id and upper(status)!='PENDING') and not exists (select 1 from mm_index_queue where queue_name='MM_PICTURE_INDEX' and upper(action)='INDEX' group by queue_name having count(*) &gt; %%value:MAIN_INDEX_QUEUE_THRESHOLD:500%%)</statement>
<!--
 <statement>insert into mm_index_queue (CREATION_STAMP, TABLE_NAME, ATTEMPT_COUNT, TARGET_INDEX, DATABASE, QUEUE_NAME, ITEM_TYPE, PRIMARY_KEY, STATUS, JOB_ID, LAST_ERROR, ITEM_DATASOURCE, FEED_NAME, ITEM_KEY, USER_NAME, ACTION, INDEX_ID, UPDATE_STAMP, PRIORITY) select cast(current_timestamp at time zone dbtimezone as date),'',0,'','','MM_COMBINED_INDEX','','','Pending','','','','',asset_id,'Dan_Drip','Index',mm_index_queue_seq.nextval,cast(current_timestamp at time zone dbtimezone as date), 15 from dripfeed_index where rownum&lt;=%%value:NUMBER_ASSETS:1000%% and not exists (select * from mm_index_queue where item_key=dripfeed_index.asset_id and upper(status)!='PENDING') and not exists (select 1 from mm_index_queue where queue_name='MM_COMBINED_INDEX' and upper(action)='INDEX' group by queue_name having count(*) &gt; %%value:MAIN_INDEX_QUEUE_THRESHOLD:500%%)</statement>
-->
</config>
</module>
<module ref="Clear_Inject_Pix">
<class>com.picdar.process2.Repository.JDBCStatement.JDBCStatement</class>
<config>
<datasource>default</datasource>
<statement>delete from dripfeed_index where asset_id in (select item_key from mm_index_queue where upper(status)='PENDING')</statement>
</config>
</module>
</modules>
</config>
</media-mogul-configuration>