<media-mogul-configuration>
	<config groupname="ReutersNewsLoaderTemplate">
		%%template:ProcessSchedule%%
		<modules>
			<!-- retry locked items after about 3 minutes-->
			<module ref="Retry locked items">
				<class>com.picdar.process.Repository.JDBCStatement.JDBCStatement</class>
				<config>
					<datasource>default</datasource>
					<statement><![CDATA[ 
update mm_queue set status = 'PENDING', attempt_count=attempt_count+1 where queue_name = '%%value:QUEUE_NAME%%' and status = 'FAILED' and last_error like '%Asset locked while saving%' and update_stamp < sysdate-0.002 and attempt_count < 10 
]]></statement>
				</config>
			</module>

			<!-- get the items from the queue -->
			<module ref="QueueChecker">
				<class>com.picdar.process2.Acquisition.QueueChecker.QueueChecker</class>
				<config>
					<queue-name>%%value:QUEUE_NAME%%</queue-name>
					<item-location>package</item-location>
					<batch-size>1</batch-size>
					<fail-rejected>yes</fail-rejected>
				</config>
			</module>
			
			<module ref="Packager">
				<class>com.picdar.process2.Acquisition.Packager.Packager</class>
				<config>
					<metadata-store-name>QueueDO</metadata-store-name>
					<metadata-default-datasource>default</metadata-default-datasource>
					<metadata-default-tablename>STORY</metadata-default-tablename>
					<package-metadata>
						<items>
							<map item="FEED_NAME" dofield="FEED_NAME" />
						</items>
					</package-metadata>
					<check-queue-retry-limit>true</check-queue-retry-limit>
					<item-location>filesystem</item-location>
					<text-report>false</text-report>
					<loaded-directory>%%value:LOAD_FOLDER%%</loaded-directory>
					<rejected-directory>%%value:REJECTS_FOLDER%%</rejected-directory>
					<partially-rejected-directory>%%value:PARTIAL_REJECTS_FOLDER%%</partially-rejected-directory>
					<move-package>true</move-package>
					<delete-on-success>true</delete-on-success>
					<reject-condition>all</reject-condition>
					<descend>false</descend>
					<ignored-items-store>ignored-items</ignored-items-store>
					<rejected_items-store>rejected-items</rejected_items-store>
					<successful-items-store>successful-items</successful-items-store>
					<move-type>normal</move-type>
					<ignoreZeroLength>true</ignoreZeroLength>
					<direxcludefilter>.*</direxcludefilter>
					<dirincludefilter />
					<fileincludefilter>*.xml,*.XML</fileincludefilter>

					<!-- new config for grouping images to their associated metadata -->
					<group-files>true</group-files>
					<group-options>
						<file storeas="_KEY_" />
						<other-file extension="xml" prefix="" storeas="metadataXMLfile" />
						<other-file extension="XML" prefix="" storeas="metadataXMLfile" />
					</group-options>
				</config>
			</module>

			<module ref="Asset XML Metadata Reader">
    		<class>com.picdar.process2.Acquisition.FileReader.ProcessItemFileReader</class>
	   		 	<config>
	     			<load-format>String</load-format>
	    			 <store-name>newsXML</store-name>
	    		</config>
   			</module>
			
			<!-- Strip off BOM character -->
			<module ref="Remove BOM">
				<class>com.picdar.process2.Processing.ProcessItemProcessor.ProcessItemProcessor</class>
				<config>
					<replace-in-object description="RemoveBOM">
                        <name>newsXML</name>
                        <find>^.+&lt;\?xml</find>
                        <replace>&lt;?xml</replace>
                    </replace-in-object>
				</config>
			</module>
			
			<module ref="Transform news item to load to CHP">
				<class>com.picdar.process2.Processing.XMLTransformer.XMLTransformer
				</class>
				<config>
					<transform name="%%value:XML_METADATA_TRANSFORMER%%">
						<readname>newsXML</readname>
						<storename>newsStoryDOXML</storename>
						<dump-xml>true</dump-xml>
					</transform>
					<failureiscritical>false</failureiscritical>
				</config>
			</module>
			
			<module ref="Form the segments.xml for the story">
				<class>com.picdar.process2.Processing.XMLTransformer.XMLTransformer
				</class>
				<config>
					<transform name="%%value:XML_SEGMENTS_TRANSFORMER%%">
						<readname>newsXML</readname>
						<storename>rawSegments</storename>
						<dump-xml>true</dump-xml>
					</transform>
					<failureiscritical>false</failureiscritical>
				</config>
			</module>
			
			<module ref="Converts to dataobject">
				<class>com.picdar.process2.Repository.MetadataConverter.MetaDataConverter
				</class>
				<config>
					<object-name>newsStoryDOXML</object-name>
					<store-name>newsStoryDO</store-name>
				</config>
			</module>

			<!-- copy the feed fields to the newsStoryDO -->
			<module ref="CopyFeedInfoToDataObject">
				<class>com.picdar.process2.Processing.MetaDataProcessor.MetaDataProcessor</class>
				<config>
					<object-name>QueueDO</object-name>
					<metadata-processors>
						<processor class="com.picdar.process2.Processing.MetaDataProcessor.TransferObjectValues" ref="FEED_NAME">
							<properties>
								<create-target-fields>true</create-target-fields>
								<transfer-type>Simple</transfer-type>
								<source-field>FEED_NAME</source-field>
								<target_1>newsStoryDO.FEED_NAME</target_1>
							</properties>
						</processor>
					</metadata-processors>
                                </config>
                        </module>

			
			<module ref="Adds segments field to dataobject">
				<class>com.picdar.process2.Processing.MetaDataProcessor.MetaDataProcessor</class>
				<config>
					<object-name>newsStoryDO</object-name>
					<metadata-processors>
						<processor class="com.picdar.process2.Processing.MetaDataProcessor.AttributeFromProcessItemObject">
							<properties>
								<source-object>RAWSegments</source-object>
								<dataobject-type>STORY</dataobject-type>
								<attribute-name>SEGMENTS</attribute-name>
							</properties>
						</processor>
					</metadata-processors>
				</config>
			</module>
			
			<module ref="TransactionStart">
				<class>com.picdar.process2.Core.TransactionStart</class>
				<config />
			</module>
			
			<module ref="DataObjectLoader Do Not Match Existing">
				<class>com.picdar.process2.Repository.DataObjectLoader.DataObjectLoader</class>
				<config>
					<source-location>filesystem</source-location>
					<create-asset-records>true</create-asset-records>
					<object-name>newsStoryDO</object-name>
				</config>
			</module>
			
			<module ref="Log the objects">
				<class>com.picdar.process2.Testing.DataInspector.DataInspector</class>
				<config/>
			</module>
			
			<module ref="TransactionEnd">
				<class>com.picdar.process2.Core.TransactionEnd</class>
				<config />
			</module>

			%%template:ApplyLobbyTemplate%%

		</modules>
	</config>
</media-mogul-configuration>