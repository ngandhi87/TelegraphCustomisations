<media-mogul-configuration>
	<config groupname="DeleterTemplate">
		<modules>
			<!-- Select the assets that should be 'Deleted' -->
			<!-- Lucene head not currently used
			<module ref="Select record for weeding">
				<class>com.picdar.process2.Acquisition.RecordSelector.RecordSelector</class>
				<config>
					<datasource_classname>com.picdar.process2.Acquisition.RecordSelector.Lucene.RecSelDataSourceLucene</datasource_classname>
					<batchsize>%%value:BATCH_SIZE%%</batchsize>

					<saved_search_name>%%value:saved_search_name%%</saved_search_name>
					<saved_search_manager>SavedSearchManager</saved_search_manager>

					<safety_criteria>
					<![CDATA[
					<conjunct group="true" type="OR">
						<criteria name="lifecycle_status" operator="eq" value="Created" />
						<criteria name="lifecycle_status" operator="eq" value="Feed" />
					</conjunct>
					]]>
					</safety_criteria>
				</config>
			</module>
			-->

			<module ref="RecordSelector">
				<class>com.picdar.process2.Acquisition.RecordSelector.RecordSelector</class>
				<config>
					<batchsize>%%value:BATCH_SIZE%%</batchsize>
					<datasource>%%value:datasource%%</datasource>

					<table>ASSET</table>
					<idfield>ASSET_ID</idfield>
					<!--
					We want to select assets that match the following criteria:
						- Has a lifecycle status of 'Created' or 'Feed'.
						- The creation stamp is older than 3 months (for a feed asset) or 1 year (for a created asset).
					-->
					<!--criteria>(UPPER(lifecycle_status) = 'FEED' and asset_id in (select asset_id from picture where creation_stamp &lt; sysdate - 90 union select asset_id from story where creation_stamp &lt; sysdate - 90 union select asset_id from media where creation_stamp &lt; sysdate - 90 union select asset_id from document where creation_stamp &lt; sysdate - 90 union select asset_id from composite where creation_stamp &lt; sysdate - 90)) OR (UPPER(lifecycle_status) = 'CREATED' and asset_id in (select asset_id from picture where creation_stamp &lt; sysdate - 365 union select asset_id from story where creation_stamp &lt; sysdate - 365 union select asset_id from media where creation_stamp &lt; sysdate - 365 union select asset_id from document where creation_stamp &lt; sysdate - 365 union select asset_id from composite where creation_stamp &lt; sysdate - 365))</criteria-->
					<criteria>%%value:criteria%%</criteria>
				</config>
			</module>

			<!-- Check that the lifecycle status of the asset is either 'Created' or 'Feed'. -->
			<module ref="Check lifecycle status">
				<class>com.picdar.process2.Processing.CheckLifecycleStatus.CheckLifecycleStatus</class>
				<config>
					<allowed_status>Created,Feed</allowed_status>
					<allow_blank_status>true</allow_blank_status>
					<action>ignore</action>
				</config>
			</module>

			<!-- Remove links for these assets. -->
			<module ref="Delete asset links">
				<class>com.picdar.process2.Repository.DatabaseDeleter.DatabaseDeleter</class>
				<config>
					<logkeys>true</logkeys>

					<deletions>
						<deletion table="MM_ASSET_SHELF" audit="MM_SHELF,MM_ASSET_SHELF" touchnodetable="MM_SHELF" />
						<deletion table="ASSET_CATEGORY" audit="HARD_CATEGORIES,ASSET_CATEGORY" touchnodetable="HARD_CATEGORIES" />
						<deletion table="ASSET_PACKAGES" audit="PACKAGES,ASSET_PACKAGES" touchnodetable="PACKAGES" />
						<deletion table="WORKFLOW_ITEM_ASSET" />

						<deletion table="LINKED_ASSET" keyfield="ASSET_ID" />
						<deletion table="LINKED_ASSET" keyfield="LINK_TO" />
					</deletions>
				</config>
			</module>

			<!-- Update the lifecycle status for these assets. -->
			<module ref="Update lifecycle status">
				<class>com.picdar.process2.Repository.JDBCStatement.ProcessItemJDBCStatement</class>
				<config>
					<datasource>%%value:datasource%%</datasource>

					<use-in>true</use-in>
					<in-field>asset_id</in-field>
					<use-at>true</use-at>
					<statement>update asset set lifecycle_status = 'Deleted', lifecycle_status_update = sysdate where @@_IN_@@</statement>
				</config>
			</module>

			<!-- Add the assets to the Lucene index queues -->
			<module ref="LuceneIndex">
				<class>com.picdar.process2.Repository.Indexer.Indexer</class>
				<config>
					<index-manager-resource>IndexManager</index-manager-resource>
					<datasource>%%value:datasource%%</datasource>
					<failureiscritical>false</failureiscritical>
					<indexfrom>reference</indexfrom>
					<indextables>picture,story,media,composite,document</indextables>
					<batchsize>10</batchsize>
					<indexer-action>index</indexer-action>
					<use-index-manager-for-batch>true</use-index-manager-for-batch>
				</config>
			</module>

			<!-- Add the assets to the NLT2 index queues -->
			<module ref="NLT2Index">
				<class>com.picdar.process2.Repository.Indexer.Indexer</class>
				<config>
					<index-manager-resource>NLT2EnrichmentIndexManager</index-manager-resource>
					<datasource>%%value:datasource%%</datasource>
					<failureiscritical>false</failureiscritical>
					<indexfrom>reference</indexfrom>
					<indextables>picture,story,media,composite,document</indextables>
					<batchsize>10</batchsize>
					<indexer-action>index</indexer-action>
					<use-index-manager-for-batch>true</use-index-manager-for-batch>
				</config>
			</module>
		</modules>
		%%template:ProcessSchedule%%
	</config>
</media-mogul-configuration>