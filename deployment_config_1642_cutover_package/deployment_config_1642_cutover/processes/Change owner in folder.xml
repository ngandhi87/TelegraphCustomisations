<media-mogul-configuration>
	<config groupname="Purge folder link by age">
		<properties>
			<CLASS hidden="true">Maintenance</CLASS>
			<TYPE hidden="true">Workflow</TYPE>
			<NAME hidden="true">Change owner in folder</NAME>
			<NORMALLY_RUNNING hidden="true">y</NORMALLY_RUNNING>
			<START_URL/>
			<APP_GROUP>SYSGROUP1</APP_GROUP>
			<OWNER>System</OWNER>
			<node_id description="Folder ID">TELEMMGLHCAT000000228935</node_id>
			<batch>100</batch>
		</properties>


<!-- CONFIGURATION INSTRUCTIONS:
  This script will loop over all child nodes for the community folder 'New Ownership' which is currently TELEMMGLHCAT000000177353 on the UAT system. It will find all pictures linked to the child folder and change the picture ownership to the name of the child folder. Once the change has completed, the picture will be unlinked again to keep the hierarchy clean.

  To identify the ID use the following SQL statement. The string "New Ownership" is the name configured as the parent community folder and must already exist in CHP. In the event that the folder name is not configured, the ownership is not changed but the asset is still unlinked from the folders.

   SELECT NODE_ID, KEY from hard_categories where KEY = 'New Ownership'

The current Production result is:

TELEMMGLHCAT000000228935	New Ownership

  To add or change the child folder to be used a configuration change below is required. All owners are preconfigured below and the new ownership mapping must be set in the module 'Set owner' below. The fragment next shows a new entry as example. To change the match from Travel Scan to Dummy Owner replace all occurrences of Travel Scan with the new ownership name Dummy Owner. The attribute "match-regex" is the match to the child folder name as found in CHP, the attribute "name" is a verbatim string for logging but it must be unique and finally the attribute "role" is the actual name of the owner as configured on the system. 

OLD:
	<conditional match-field="NEW_OWNER" match-regex="Travel Scan" name="Set Travel Scan from Lookup">
		<owner role="Travel Scan"/>
	</conditional>

NEW:
	<conditional match-field="NEW_OWNER" match-regex="Dummy Owner" name="Set Dummy Owner from Lookup">
		<owner role="Dummy Owner"/>
	</conditional>

Note - the name of the community folder does not need to match the new ownership name. It is sufficient to set the match-regex is set to the folder name and role to the new owner name. However, it is less confusing to keep them the same.

Note2 - the active folder is only directly underneath the node_id value. Child folders are not considered and will not change.

Note3 - unconfigured folders will still be processed but the ownership will be left as is on the image. 

-->
		<schedule>
			<scheduletype>continuous</scheduletype>
			<runinterval>
				<count>1</count>
				<intervalsize>minute</intervalsize>
			</runinterval>
			<timedschedule>
				<months>1-12</months>
				<dates>1-31</dates>
				<weekdays>1-7</weekdays>
				<hours>0-23</hours>
				<minutes>0</minutes>
			</timedschedule>
		</schedule>

		<modules>

			<module ref="Create process item">
				<class>com.picdar.process2.Acquisition.ProcessItemCreator.ProcessItemCreator</class>
				<config>
					<name>NODE</name>
				</config>
			</module>

			<module ref="Find nodes">
				<class>com.picdar.process2.Repository.JDBCStatement.ProcessItemJDBCStatement</class>
				<config>
					<datasource>default</datasource>
					<use-at>true</use-at>
					<statement><![CDATA[ SELECT ASSET_ID, NODE_ID from ASSET_CATEGORY where node_id in ( select node_id from hard_categories where parent_id = '%%value:node_id%%' ) and ROWNUM < %%value:batch%% ]]></statement>
					<store_name>NODES</store_name>
					<stores_field_names>no</stores_field_names>
					<add_to_process_item>yes</add_to_process_item>
				</config>
			</module>

			<module ref="ObjectArray Iterator">
				<class>com.picdar.process2.Processing.ObjectArray2Items.ObjectArrayIterator</class>
				<config>
					<read-name>NODES</read-name>
					<store-name>ONE_NODE</store-name>
				</config>
			</module> 

			<module ref="Find new owner for this picture">
				<class>com.picdar.process2.Processing.ScriptProcessor.ScriptProcessor</class>
				<config>
					<script-manager>ScriptManager</script-manager>
					<script-name>ChangeOwnerByFolderNode</script-name>
					<script-properties>
						<node>ONE_NODE</node>
						<from_node>%%value:node_id%%</from_node>
						<to_owner>NEW_OWNER</to_owner>
						<to_asset>PICTURE_DO</to_asset>
					</script-properties>
				</config>
			</module>
			
			<module ref="TransactionStart">
				<class>com.picdar.process2.Core.TransactionStart</class>
				<config/>
			</module>

			<module ref="DataObjectLoader">
				<class>com.picdar.process2.Repository.DataObjectLoader.DataObjectLoader</class>
				<config>
					<object-name>PICTURE_DO</object-name>
					<match-existing-records>true</match-existing-records>
					<match-by-primary-key>true</match-by-primary-key>
					<update-matched-records>true</update-matched-records>
					<reject-unmatched-records>true</reject-unmatched-records>
					<reject-matched-records>false</reject-matched-records>
					<types-to-match>ASSET</types-to-match>
				</config>
			</module>
			
			<module ref="Set owner">
				<class>com.picdar.process2.Repository.Security.SetOwnershipAndPolicies</class>
				<config>
					<readName>PICTURE_DO</readName>
					<conditional match-field="NEW_OWNER" match-regex="ActionImage" name="Set ActionImage from Lookup">
						<owner role="ActionImage"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="AFP" name="Set AFP from Lookup">
						<owner role="AFP"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Alamy" name="Set Alamy from Lookup">
						<owner role="Alamy"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="AP" name="Set AP from Lookup">
						<owner role="AP"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Arts Scan" name="Set Arts Scan from Lookup">
						<owner role="Arts Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Barcroft" name="Set Barcroft from Lookup">
						<owner role="Barcroft"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Bloomberg" name="Set Bloomberg from Lookup">
						<owner role="Bloomberg"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="CHPScans" name="Set CHPScans from Lookup">
						<owner role="CHPScans"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Commissioned" name="Set Commissioned from Lookup">
						<owner role="Commissioned"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Commissioned Scan" name="Set Commissioned Scan from Lookup">
						<owner role="Commissioned Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Corbis" name="Set Corbis from Lookup">
						<owner role="Corbis"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Create Scans" name="Set Create Scans from Lookup">
						<owner role="Create Scans"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Culture Scans" name="Set Culture Scans from Lookup">
						<owner role="Culture Scans"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Demotix" name="Set Demotix from Lookup">
						<owner role="Demotix"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="DTFTP" name="Set DTFTP from Lookup">
						<owner role="DTFTP"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="EPA" name="Set EPA from Lookup">
						<owner role="EPA"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="EphotoCreate" name="Set EphotoCreate from Lookup">
						<owner role="EphotoCreate"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="EphotoMypic" name="Set EphotoMypic from Lookup">
						<owner role="EphotoMypic"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Fashion Scan" name="Set Fashion Scan from Lookup">
						<owner role="Fashion Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="FEFTP" name="Set FEFTP from Lookup">
						<owner role="FEFTP"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="FeaturesPhoto" name="Set FeaturesPhoto from Lookup">
						<owner role="FeaturesPhoto"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Features Scan" name="Set Features Scan from Lookup">
						<owner role="Features Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Flynet" name="Set Flynet from Lookup">
						<owner role="Flynet"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="General Cost Library" name="Set General Cost Library from Lookup">
						<owner role="General Cost Library"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Getty Contributor" name="Set Getty Contributor from Lookup">
						<owner role="Getty Contributor"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Getty Negotiated Licence" name="Set Getty Negotiated Licence from Lookup">
						<owner role="Getty Negotiated Licence"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Getty News" name="Set Getty News from Lookup">
						<owner role="Getty News"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Getty Sport" name="Set Getty Sport from Lookup">
						<owner role="Getty Sport"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="GroupFTP" name="Set GroupFTP from Lookup">
						<owner role="GroupFTP"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Handout Publicity Material" name="Set Handout Publicity Material from Lookup">
						<owner role="Handout Publicity Material"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Legacy Commissioned" name="Set Legacy Commissioned from Lookup">
						<owner role="Legacy Commissioned"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Library" name="Set Library from Lookup">
						<owner role="Library"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Library Audit" name="Set Library Audit from Lookup">
						<owner role="Library Audit"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Motoring Scan" name="Set Motoring Scan from Lookup">
						<owner role="Motoring Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="News Scan" name="Set News Scan from Lookup">
						<owner role="News Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="PA" name="Set PA from Lookup">
						<owner role="PA"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="PA Restricted" name="Set PA Restricted from Lookup">
						<owner role="PA Restricted"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Photo" name="Set Photo from Lookup">
						<owner role="Photo"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Reuters" name="Set Reuters from Lookup">
						<owner role="Reuters"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Rex" name="Set Rex from Lookup">
						<owner role="Rex"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Social Media Internet" name="Set Social Media Internet from Lookup">
						<owner role="Social Media Internet"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Splash" name="Set Splash from Lookup">
						<owner role="Splash"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Sport" name="Set Sport from Lookup">
						<owner role="Sport"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Sport Scan" name="Set Sport Scan from Lookup">
						<owner role="Sport Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Sunday Scans" name="Set Sunday Scans from Lookup">
						<owner role="Sunday Scans"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Telegraph Staff" name="Set Telegraph Staff from Lookup">
						<owner role="Telegraph Staff"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Travel Scan" name="Set Travel Scan from Lookup">
						<owner role="Travel Scan"/>
					</conditional>
					<conditional match-field="NEW_OWNER" match-regex="Wenn" name="Set Wenn from Lookup">
						<owner role="Wenn"/>
					</conditional>
					<default>
						<owner role="Owner Change Rejects"/>
					</default>
				</config>
			</module>

			<module ref="TransactionEnd">
				<class>com.picdar.process2.Core.TransactionEnd</class>
				<config/>
			</module>
			
			<module ref="Delete nodes">
				<class>com.picdar.process2.Repository.JDBCStatement.DataObjectJDBCStatement</class>
				<config>
					<datasource>default</datasource>
					<use-at>true</use-at>
					<statement><![CDATA[ DELETE from asset_category where NODE_ID='@@read-from:FIELD.NODE_ID@@' and ASSET_ID='@@read-from:FIELD.ASSET_ID@@' AND ROWNUM < 2]]></statement>
					<statement><![CDATA[ UPDATE HARD_CATEGORIES SET TIME_STAMP = cast(current_timestamp at time zone dbtimezone as date) WHERE NODE_ID='@@read-from:FIELD.NODE_ID@@']]></statement>
					<statement><![CDATA[ update MM_AUDIT set DATE_MODIFIED=cast(current_timestamp at time zone dbtimezone as date) where audit_id in('ASSET_CATEGORY','HARD_CATEGORIES')]]></statement>
					<object-source>ONE_NODE</object-source>
				</config>
			</module>

			<module ref="Re-index asset because of ownership changes">
				<class>com.picdar.process2.Repository.Indexer.Indexer</class>
				<config>
					<index-manager-resource>IndexManager</index-manager-resource>
					<datasource>default</datasource>
					<failureiscritical>false</failureiscritical>
					<indexfrom>metadata</indexfrom>
					<metadata-object-name>PICTURE_DO</metadata-object-name>
					<indextables>picture,story,media,composite,document</indextables>
					<batchsize>10</batchsize>
					<indexer-action>index</indexer-action>
					<use-index-manager-for-batch>true</use-index-manager-for-batch>
					<index-priority>modification</index-priority>
				</config>
			</module>	
			
		</modules>

	</config>
</media-mogul-configuration>