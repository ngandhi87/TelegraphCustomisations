<media-mogul-configuration>
        <config groupname="ProcMigration-backfill">
		<modules>
			<module ref="Selects records for transfer from source location">
				<class>com.picdar.process2.Acquisition.RecordSelector.RecordSelector</class>
				<config>
					<datasource_classname>com.picdar.process2.Acquisition.RecordSelector.NamedAccess.RecSelDataSourceNA</datasource_classname>
					<datasource>classic-lib</datasource>

					<table>photorecord</table>
					<idfield>_xurn</idfield>
					<fixed-list>%%value:fixedlist%%</fixed-list>

					<naCriteria>(eq [photorecord]_urn 0)</naCriteria>
					<jdbcCriteria>batchid is null</jdbcCriteria>
					<limit>10</limit>

					<batchsize>%%value:batchsize:100%%</batchsize>
					<action_when_no_match>0</action_when_no_match>
					<dateformat>ddMMyyyy</dateformat>
					<defaultDate>22022005</defaultDate>

				</config>
			</module>

			<module ref="Reads the metadata in from source location">
				<class>com.picdar.process2.Repository.DataReader.NamedAccess.DataReaderNA</class>
				<config>
			        <DataManagerResource>ClassicDataManagerLib</DataManagerResource>
					<SearchManagerResource>ClassicSearchManagerLib</SearchManagerResource>

					<datasource>classic-lib</datasource>
<getPublicationRecords>true</getPublicationRecords>
<childRecordsToRead>versions</childRecordsToRead>
                    <do-store-name>SOURCE_RECORD_DO</do-store-name>
                    <xml-store-name>SOURCE_RECORD_XML</xml-store-name>
<add-field-info>false</add-field-info>
				</config>
			</module>


			<module ref="Converts to target xml format">
				<class>com.picdar.process2.Processing.XMLTransformer.XMLTransformer</class>
				<config>
					<XMLManagerResource>XMLManager</XMLManagerResource>
					<failureiscritical>true</failureiscritical>
					<!-- dump-xml>true</dump-xml -->
                                        <!-- dump-xml-path>/var/tmp/dump</dump-xml-path-->
					<transform name="TelegraphLibraryMigration">

						<readname>SOURCE_RECORD_XML</readname>
						<storename>TARGET_RECORD_XML</storename>
					</transform>
				</config>
			</module>

			<module ref="Transforms into target data objects">
				<class>com.picdar.process2.Repository.MetadataConverter.MetaDataConverter</class>

				<config>
					<XMLIngestionManagerResource>XMLIngestionManager</XMLIngestionManagerResource>
					<object-name>TARGET_RECORD_XML</object-name>
					<store-name>TARGET_RECORD_DO</store-name>
				</config>
			</module>


			<module ref="Starts transaction">
				<class>com.picdar.process2.Core.TransactionStart</class>
				<config>
					<TransactionManager>TransactionManager</TransactionManager>
				</config>
			</module>

			<module ref="Saves metadata in target location">
				<class>com.picdar.process2.Repository.DataObjectLoader.DataObjectLoader</class>
				<config>
      				<object-name>TARGET_RECORD_DO</object-name>
					<TransactionManager>TransactionManager</TransactionManager>
					<DataManager>DataManager</DataManager>
					<AssetAccess>AssetAccess</AssetAccess>

					<AssetMetadataManager>AssetMetadataManager</AssetMetadataManager>
					<LinkageManager>LinkageManager</LinkageManager>
					<match-existing-records>true</match-existing-records>
					<match-by-primary-key>true</match-by-primary-key>
					<match-fields/>
					<reject-matched-records>false</reject-matched-records>

					<update-matched-records>true</update-matched-records>
					<reject-unmatched-records>false</reject-unmatched-records>
					<create-asset-records>false</create-asset-records>
					<create-asset-versions>false</create-asset-versions>
					<version-action/>
					<metadata-types>picture</metadata-types>

					<child-records-to-delete>NOTICE</child-records-to-delete>
					<store-data-object-properties>
						<picture>
							<UPDATE_LISTS>false</UPDATE_LISTS>
							<THROW_UPDATE_LIST_ERRORS>false</THROW_UPDATE_LIST_ERRORS>
						</picture>
					</store-data-object-properties>

				</config>
			</module>
			<module ref="Commits transaction">

				<class>com.picdar.process2.Core.TransactionEnd</class>
				<config>
					<TransactionManager>TransactionManager</TransactionManager>
				</config>
			</module>

                        <module ref="Update object into purpose build audit table in case record exists, silent error otherwise">
                                <class>com.picdar.process2.Repository.JDBCStatement.DataObjectJDBCStatement</class>
                                <config>

                                        <datasource>default</datasource>
                                        <object-source>SOURCE_RECORD_DO</object-source>
                                        <use-at>true</use-at>
                                        <statement>update audt_libphrec set time_stamp=sysdate, batchid = '%%value:batchid%%' where eurn = '@@read-from:FIELD._xurn@@' </statement> 
                                </config>
                        </module>

                        <module ref="Update object in purpose build audit table, in case record does not exist">
                                <class>com.picdar.process2.Repository.JDBCStatement.DataObjectJDBCStatement</class>
                                <config>
                                        <datasource>default</datasource>
                                        <object-source>SOURCE_RECORD_DO</object-source>
                                        <use-at>true</use-at>
                                        <statement>insert into audt_libphrec ( eUrn, batchid) select '@@read-from:FIELD._xurn@@', '%%value:batchid%%' from dual where not exists ( select 1 from audt_libphrec where eurn = '@@read-from:FIELD._xurn@@' ) </statement> 
                                </config>
                        </module>

		</modules>

		<schedule>
			<scheduletype>manual</scheduletype>
			<runinterval>
				<count>5</count>

				<intervalsize>minute</intervalsize>
			</runinterval>
			<timedschedule>
				<months>1-12</months>
				<dates>1-31</dates>
				<weekdays>1-7</weekdays>
				<hours>22</hours>

				<minutes>0</minutes>
			</timedschedule>
		</schedule>
	</config>
</media-mogul-configuration>

                    